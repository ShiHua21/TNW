/*
 * This file is generated by jOOQ.
*/
package com.jic.tnw.db.mysql.tables;


import com.jic.tnw.db.converter.LocalDateTimeConverter1;
import com.jic.tnw.db.mysql.Indexes;
import com.jic.tnw.db.mysql.Keys;
import com.jic.tnw.db.mysql.Tnw;
import com.jic.tnw.db.mysql.enums.UserApprovalStatus;
import com.jic.tnw.db.mysql.tables.records.UserRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * ???
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends TableImpl<UserRecord> {

    private static final long serialVersionUID = -1390973341;

    /**
     * The reference instance of <code>TNW.user</code>
     */
    public static final User USER = new User();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRecord> getRecordType() {
        return UserRecord.class;
    }

    /**
     * The column <code>TNW.user.id</code>. ??ID
     */
    public final TableField<UserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "??ID");

    /**
     * The column <code>TNW.user.email</code>. ????
     */
    public final TableField<UserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(128), this, "????");

    /**
     * The column <code>TNW.user.mobile</code>. ??
     */
    public final TableField<UserRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??");

    /**
     * The column <code>TNW.user.password</code>. ????
     */
    public final TableField<UserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false), this, "????");

    /**
     * The column <code>TNW.user.pay_password</code>. ????
     */
    public final TableField<UserRecord, String> PAY_PASSWORD = createField("pay_password", org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "????");

    /**
     * The column <code>TNW.user.locale</code>.
     */
    public final TableField<UserRecord, String> LOCALE = createField("locale", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>TNW.user.uri</code>. ??URI
     */
    public final TableField<UserRecord, String> URI = createField("uri", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??URI");

    /**
     * The column <code>TNW.user.username</code>. ???
     */
    public final TableField<UserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "???");

    /**
     * The column <code>TNW.user.truename</code>. ????
     */
    public final TableField<UserRecord, String> TRUENAME = createField("truename", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "????");

    /**
     * The column <code>TNW.user.title</code>. ??
     */
    public final TableField<UserRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??");

    /**
     * The column <code>TNW.user.tags</code>. ??
     */
    public final TableField<UserRecord, String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??");

    /**
     * The column <code>TNW.user.type</code>. default???????, weibo??????
     */
    public final TableField<UserRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "default???????, weibo??????");

    /**
     * The column <code>TNW.user.point</code>. ??
     */
    public final TableField<UserRecord, Integer> POINT = createField("point", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??");

    /**
     * The column <code>TNW.user.coin</code>. ??
     */
    public final TableField<UserRecord, Integer> COIN = createField("coin", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??");

    /**
     * The column <code>TNW.user.small_avatar</code>. ???
     */
    public final TableField<UserRecord, String> SMALL_AVATAR = createField("small_avatar", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "???");

    /**
     * The column <code>TNW.user.medium_avatar</code>. ???
     */
    public final TableField<UserRecord, String> MEDIUM_AVATAR = createField("medium_avatar", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "???");

    /**
     * The column <code>TNW.user.large_avatar</code>. ???
     */
    public final TableField<UserRecord, String> LARGE_AVATAR = createField("large_avatar", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "???");

    /**
     * The column <code>TNW.user.email_verified</code>. ????????
     */
    public final TableField<UserRecord, Boolean> EMAIL_VERIFIED = createField("email_verified", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BOOLEAN)), this, "????????");

    /**
     * The column <code>TNW.user.setup</code>. ?????????????????????????
     */
    public final TableField<UserRecord, Boolean> SETUP = createField("setup", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "?????????????????????????");

    /**
     * The column <code>TNW.user.roles</code>. ????
     */
    public final TableField<UserRecord, String> ROLES = createField("roles", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "????");

    /**
     * The column <code>TNW.user.promoted</code>. ?????
     */
    public final TableField<UserRecord, Boolean> PROMOTED = createField("promoted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BOOLEAN)), this, "?????");

    /**
     * The column <code>TNW.user.promoted_seq</code>.
     */
    public final TableField<UserRecord, Integer> PROMOTED_SEQ = createField("promoted_seq", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>TNW.user.promoted_time</code>. ????
     */
    public final TableField<UserRecord, LocalDateTime> PROMOTED_TIME = createField("promoted_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "????", new LocalDateTimeConverter1());

    /**
     * The column <code>TNW.user.locked</code>. ?????
     */
    public final TableField<UserRecord, Boolean> LOCKED = createField("locked", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BOOLEAN)), this, "?????");

    /**
     * The column <code>TNW.user.lock_deadline</code>. ??????
     */
    public final TableField<UserRecord, Integer> LOCK_DEADLINE = createField("lock_deadline", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??????");

    /**
     * The column <code>TNW.user.consecutive_password_error_times</code>. ????????
     */
    public final TableField<UserRecord, Integer> CONSECUTIVE_PASSWORD_ERROR_TIMES = createField("consecutive_password_error_times", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "????????");

    /**
     * The column <code>TNW.user.last_password_fail_time</code>. ??????????
     */
    public final TableField<UserRecord, LocalDateTime> LAST_PASSWORD_FAIL_TIME = createField("last_password_fail_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??????????", new LocalDateTimeConverter1());

    /**
     * The column <code>TNW.user.last_password_reset_time</code>. ??????????
     */
    public final TableField<UserRecord, LocalDateTime> LAST_PASSWORD_RESET_TIME = createField("last_password_reset_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??????????", new LocalDateTimeConverter1());

    /**
     * The column <code>TNW.user.login_time</code>. ??????
     */
    public final TableField<UserRecord, LocalDateTime> LOGIN_TIME = createField("login_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??????", new LocalDateTimeConverter1());

    /**
     * The column <code>TNW.user.login_ip</code>. ????IP
     */
    public final TableField<UserRecord, String> LOGIN_IP = createField("login_ip", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "????IP");

    /**
     * The column <code>TNW.user.login_session_id</code>. ??????ID
     */
    public final TableField<UserRecord, String> LOGIN_SESSION_ID = createField("login_session_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??????ID");

    /**
     * The column <code>TNW.user.approval_time</code>. ??????
     */
    public final TableField<UserRecord, LocalDateTime> APPROVAL_TIME = createField("approval_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??????", new LocalDateTimeConverter1());

    /**
     * The column <code>TNW.user.approval_status</code>. ??????
     */
    public final TableField<UserRecord, UserApprovalStatus> APPROVAL_STATUS = createField("approval_status", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.jic.tnw.db.mysql.enums.UserApprovalStatus.class), this, "??????");

    /**
     * The column <code>TNW.user.new_message_num</code>. ?????
     */
    public final TableField<UserRecord, Integer> NEW_MESSAGE_NUM = createField("new_message_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "?????");

    /**
     * The column <code>TNW.user.new_notification_num</code>. ?????
     */
    public final TableField<UserRecord, Integer> NEW_NOTIFICATION_NUM = createField("new_notification_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "?????");

    /**
     * The column <code>TNW.user.created_ip</code>. ??IP
     */
    public final TableField<UserRecord, String> CREATED_IP = createField("created_ip", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??IP");

    /**
     * The column <code>TNW.user.created_time</code>. ????
     */
    public final TableField<UserRecord, LocalDateTime> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "????", new LocalDateTimeConverter1());

    /**
     * The column <code>TNW.user.updated_time</code>. ??????
     */
    public final TableField<UserRecord, LocalDateTime> UPDATED_TIME = createField("updated_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??????", new LocalDateTimeConverter1());

    /**
     * The column <code>TNW.user.invite_code</code>. ???
     */
    public final TableField<UserRecord, String> INVITE_CODE = createField("invite_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "???");

    /**
     * The column <code>TNW.user.registered_way</code>. ??????(web/ios/android)
     */
    public final TableField<UserRecord, String> REGISTERED_WAY = createField("registered_way", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "??????(web/ios/android)");

    /**
     * The column <code>TNW.user.pwd_init</code>. ?????
     */
    public final TableField<UserRecord, Boolean> PWD_INIT = createField("pwd_init", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BOOLEAN)), this, "?????");

    /**
     * The column <code>TNW.user.post_id</code>. ??id
     */
    public final TableField<UserRecord, Integer> POST_ID = createField("post_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??id");

    /**
     * The column <code>TNW.user.read_guide</code>. ????????
     */
    public final TableField<UserRecord, Boolean> READ_GUIDE = createField("read_guide", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BOOLEAN)), this, "????????");

    /**
     * The column <code>TNW.user.org_ids</code>. ??ID
     */
    public final TableField<UserRecord, String> ORG_IDS = createField("org_ids", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "??ID");

    /**
     * The column <code>TNW.user.org_codes</code>. ??ID
     */
    public final TableField<UserRecord, String> ORG_CODES = createField("org_codes", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "??ID");

    /**
     * Create a <code>TNW.user</code> table reference
     */
    public User() {
        this(DSL.name("user"), null);
    }

    /**
     * Create an aliased <code>TNW.user</code> table reference
     */
    public User(String alias) {
        this(DSL.name(alias), USER);
    }

    /**
     * Create an aliased <code>TNW.user</code> table reference
     */
    public User(Name alias) {
        this(alias, USER);
    }

    private User(Name alias, Table<UserRecord> aliased) {
        this(alias, aliased, null);
    }

    private User(Name alias, Table<UserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "???");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tnw.TNW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_EMAIL_INDEX, Indexes.USER_MOBILE_INDEX, Indexes.USER_ORG_CODES_INDEX, Indexes.USER_ORG_POST_ID_INDEX, Indexes.USER_PRIMARY, Indexes.USER_PROMOTED, Indexes.USER_UPDATEDTIME, Indexes.USER_USERNAME, Indexes.USER_USER_TYPE_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserRecord> getPrimaryKey() {
        return Keys.KEY_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY, Keys.KEY_USER_USERNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public User as(String alias) {
        return new User(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public User as(Name alias) {
        return new User(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public User rename(String name) {
        return new User(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public User rename(Name name) {
        return new User(name, null);
    }
}
