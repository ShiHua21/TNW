/*
 * This file is generated by jOOQ.
*/
package com.jic.tnw.db.mysql.tables;


import com.jic.tnw.db.converter.LocalDateTimeConverter1;
import com.jic.tnw.db.mysql.Indexes;
import com.jic.tnw.db.mysql.Keys;
import com.jic.tnw.db.mysql.Tnw;
import com.jic.tnw.db.mysql.tables.records.UserOrgRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * ????????
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserOrg extends TableImpl<UserOrgRecord> {

    private static final long serialVersionUID = -829645225;

    /**
     * The reference instance of <code>TNW.user_org</code>
     */
    public static final UserOrg USER_ORG = new UserOrg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserOrgRecord> getRecordType() {
        return UserOrgRecord.class;
    }

    /**
     * The column <code>TNW.user_org.id</code>. ID
     */
    public final TableField<UserOrgRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "ID");

    /**
     * The column <code>TNW.user_org.user_id</code>. ??ID
     */
    public final TableField<UserOrgRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "??ID");

    /**
     * The column <code>TNW.user_org.org_id</code>. ????id
     */
    public final TableField<UserOrgRecord, Integer> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "????id");

    /**
     * The column <code>TNW.user_org.org_code</code>. ????????
     */
    public final TableField<UserOrgRecord, String> ORG_CODE = createField("org_code", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("1.", org.jooq.impl.SQLDataType.VARCHAR)), this, "????????");

    /**
     * The column <code>TNW.user_org.created_user_id</code>. ????ID
     */
    public final TableField<UserOrgRecord, Integer> CREATED_USER_ID = createField("created_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "????ID");

    /**
     * The column <code>TNW.user_org.created_time</code>. ????
     */
    public final TableField<UserOrgRecord, LocalDateTime> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "????", new LocalDateTimeConverter1());

    /**
     * The column <code>TNW.user_org.last_upd_user_id</code>. ?????
     */
    public final TableField<UserOrgRecord, Integer> LAST_UPD_USER_ID = createField("last_upd_user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "?????");

    /**
     * The column <code>TNW.user_org.last_upd_time</code>. ??????
     */
    public final TableField<UserOrgRecord, LocalDateTime> LAST_UPD_TIME = createField("last_upd_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "??????", new LocalDateTimeConverter1());

    /**
     * Create a <code>TNW.user_org</code> table reference
     */
    public UserOrg() {
        this(DSL.name("user_org"), null);
    }

    /**
     * Create an aliased <code>TNW.user_org</code> table reference
     */
    public UserOrg(String alias) {
        this(DSL.name(alias), USER_ORG);
    }

    /**
     * Create an aliased <code>TNW.user_org</code> table reference
     */
    public UserOrg(Name alias) {
        this(alias, USER_ORG);
    }

    private UserOrg(Name alias, Table<UserOrgRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserOrg(Name alias, Table<UserOrgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "????????");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tnw.TNW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_ORG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserOrgRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_ORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserOrgRecord> getPrimaryKey() {
        return Keys.KEY_USER_ORG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserOrgRecord>> getKeys() {
        return Arrays.<UniqueKey<UserOrgRecord>>asList(Keys.KEY_USER_ORG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserOrg as(String alias) {
        return new UserOrg(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserOrg as(Name alias) {
        return new UserOrg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserOrg rename(String name) {
        return new UserOrg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserOrg rename(Name name) {
        return new UserOrg(name, null);
    }
}
